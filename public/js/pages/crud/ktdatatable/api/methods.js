/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/crud/ktdatatable/api/methods.js":
/*!*********************************************************************!*\
  !*** ./resources/metronic/js/pages/crud/ktdatatable/api/methods.js ***!
  \*********************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTDefaultDatatableDemo = function () {\n  // Private functions\n  // basic demo\n  var demo = function demo() {\n    var options = {\n      // datasource definition\n      data: {\n        type: 'remote',\n        source: {\n          read: {\n            url: HOST_URL + '/api/datatables/demos/default.php'\n          }\n        },\n        pageSize: 20,\n        // display 20 records per page\n        serverPaging: true,\n        serverFiltering: true,\n        serverSorting: true\n      },\n      // layout definition\n      layout: {\n        scroll: true,\n        // enable/disable datatable scroll both horizontal and vertical when needed.\n        height: 550,\n        // datatable's body's fixed height\n        footer: false // display/hide footer\n\n      },\n      // column sorting\n      sortable: true,\n      pagination: true,\n      search: {\n        input: $('#kt_datatable_search_query'),\n        key: 'generalSearch'\n      },\n      // columns definition\n      columns: [{\n        field: 'ID',\n        title: '#',\n        sortable: false,\n        type: 'number',\n        width: 30,\n        selector: true,\n        textAlign: 'center',\n        template: function template(row) {\n          return row.RecordID;\n        }\n      }, {\n        field: 'RecordID',\n        title: 'ID',\n        width: 30,\n        type: 'number'\n      }, {\n        field: 'OrderID',\n        title: 'Order ID'\n      }, {\n        field: 'Country',\n        title: 'Country',\n        template: function template(row) {\n          return row.Country + ' ' + row.ShipCountry;\n        }\n      }, {\n        field: 'ShipDate',\n        title: 'Ship Date',\n        type: 'date',\n        format: 'MM/DD/YYYY'\n      }, {\n        field: 'CompanyName',\n        title: 'Company Name'\n      }, {\n        field: 'Status',\n        title: 'Status',\n        // callback function support for column rendering\n        template: function template(row) {\n          var status = {\n            1: {\n              'title': 'Pending',\n              'class': 'label-light-primary'\n            },\n            2: {\n              'title': 'Delivered',\n              'class': ' label-light-danger'\n            },\n            3: {\n              'title': 'Canceled',\n              'class': ' label-light-primary'\n            },\n            4: {\n              'title': 'Success',\n              'class': ' label-light-success'\n            },\n            5: {\n              'title': 'Info',\n              'class': ' label-light-info'\n            },\n            6: {\n              'title': 'Danger',\n              'class': ' label-light-danger'\n            },\n            7: {\n              'title': 'Warning',\n              'class': ' label-light-warning'\n            }\n          };\n          return '<span class=\"label ' + status[row.Status][\"class\"] + ' label-inline font-weight-bold label-lg\">' + status[row.Status].title + '</span>';\n        }\n      }, {\n        field: 'Type',\n        title: 'Type',\n        autoHide: false,\n        // callback function support for column rendering\n        template: function template(row) {\n          var status = {\n            1: {\n              'title': 'Online',\n              'state': 'danger'\n            },\n            2: {\n              'title': 'Retail',\n              'state': 'primary'\n            },\n            3: {\n              'title': 'Direct',\n              'state': 'success'\n            }\n          };\n          return '<span class=\"label label-' + status[row.Type].state + ' label-dot mr-2\"></span><span class=\"font-weight-bold text-' + status[row.Type].state + '\">' + status[row.Type].title + '</span>';\n        }\n      }, {\n        field: 'Actions',\n        title: 'Actions',\n        sortable: false,\n        width: 125,\n        overflow: 'visible',\n        autoHide: false,\n        template: function template() {\n          return '\\\r\n\t\t\t\t\t\t\t<div class=\"dropdown dropdown-inline\">\\\r\n\t\t\t\t\t\t\t\t<a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon\" data-toggle=\"dropdown\">\\\r\n\t                                <i class=\"la la-cog\"></i>\\\r\n\t                            </a>\\\r\n\t\t\t\t\t\t\t  \t<div class=\"dropdown-menu dropdown-menu-sm dropdown-menu-right\">\\\r\n\t\t\t\t\t\t\t\t\t<ul class=\"nav nav-hoverable flex-column\">\\\r\n\t\t\t\t\t\t\t    \t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\"><i class=\"nav-icon la la-edit\"></i><span class=\"nav-text\">Edit Details</span></a></li>\\\r\n\t\t\t\t\t\t\t    \t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\"><i class=\"nav-icon la la-leaf\"></i><span class=\"nav-text\">Update Status</span></a></li>\\\r\n\t\t\t\t\t\t\t    \t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\"><i class=\"nav-icon la la-print\"></i><span class=\"nav-text\">Print</span></a></li>\\\r\n\t\t\t\t\t\t\t\t\t</ul>\\\r\n\t\t\t\t\t\t\t  \t</div>\\\r\n\t\t\t\t\t\t\t</div>\\\r\n\t\t\t\t\t\t\t<a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon\" title=\"Edit details\">\\\r\n\t\t\t\t\t\t\t\t<i class=\"la la-edit\"></i>\\\r\n\t\t\t\t\t\t\t</a>\\\r\n\t\t\t\t\t\t\t<a href=\"javascript:;\" class=\"btn btn-sm btn-clean btn-icon\" title=\"Delete\">\\\r\n\t\t\t\t\t\t\t\t<i class=\"la la-trash\"></i>\\\r\n\t\t\t\t\t\t\t</a>\\\r\n\t\t\t\t\t\t';\n        }\n      }]\n    };\n    var datatable = $('#kt_datatable').KTDatatable(options); // both methods are supported\n    // datatable.methodName(args); or $(datatable).KTDatatable(methodName, args);\n\n    $('#kt_datatable_destroy').on('click', function () {\n      // datatable.destroy();\n      $('#kt_datatable').KTDatatable('destroy');\n    });\n    $('#kt_datatable_init').on('click', function () {\n      datatable = $('#kt_datatable').KTDatatable(options);\n    });\n    $('#kt_datatable_reload').on('click', function () {\n      // datatable.reload();\n      $('#kt_datatable').KTDatatable('reload');\n    });\n    $('#kt_datatable_sort_asc').on('click', function () {\n      datatable.sort('Status', 'asc');\n    });\n    $('#kt_datatable_sort_desc').on('click', function () {\n      datatable.sort('Status', 'desc');\n    }); // get checked record and get value by column name\n\n    $('#kt_datatable_get').on('click', function () {\n      // select active rows\n      datatable.rows('.datatable-row-active'); // check selected nodes\n\n      if (datatable.nodes().length > 0) {\n        // get column by field name and get the column nodes\n        var value = datatable.columns('CompanyName').nodes().text();\n        console.log(value);\n      }\n    }); // record selection\n\n    $('#kt_datatable_check').on('click', function () {\n      var input = $('#kt_datatable_check_input').val();\n      datatable.setActive(input);\n    });\n    $('#kt_datatable_check_all').on('click', function () {\n      // datatable.setActiveAll(true);\n      $('#kt_datatable').KTDatatable('setActiveAll', true);\n    });\n    $('#kt_datatable_uncheck_all').on('click', function () {\n      // datatable.setActiveAll(false);\n      $('#kt_datatable').KTDatatable('setActiveAll', false);\n    });\n    $('#kt_datatable_hide_column').on('click', function () {\n      datatable.columns('ShipDate').visible(false);\n    });\n    $('#kt_datatable_show_column').on('click', function () {\n      datatable.columns('ShipDate').visible(true);\n    });\n    $('#kt_datatable_remove_row').on('click', function () {\n      datatable.rows('.datatable-row-active').remove();\n    });\n    $('#kt_datatable_search_status').on('change', function () {\n      datatable.search($(this).val().toLowerCase(), 'Status');\n    });\n    $('#kt_datatable_search_type').on('change', function () {\n      datatable.search($(this).val().toLowerCase(), 'Type');\n    });\n    $('#kt_datatable_search_status, #kt_datatable_search_type').selectpicker();\n  };\n\n  return {\n    // public functions\n    init: function init() {\n      demo();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTDefaultDatatableDemo.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/crud/ktdatatable/api/methods.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/crud/ktdatatable/api/methods.js"]();
/******/ 	
/******/ })()
;