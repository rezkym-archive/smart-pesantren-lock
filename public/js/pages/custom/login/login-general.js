/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/custom/login/login-general.js":
/*!*******************************************************************!*\
  !*** ./resources/metronic/js/pages/custom/login/login-general.js ***!
  \*******************************************************************/
/***/ (() => {

eval(" // Class Definition\n\nvar KTLogin = function () {\n  var _login;\n\n  var _showForm = function _showForm(form) {\n    var cls = 'login-' + form + '-on';\n    var form = 'kt_login_' + form + '_form';\n\n    _login.removeClass('login-forgot-on');\n\n    _login.removeClass('login-signin-on');\n\n    _login.removeClass('login-signup-on');\n\n    _login.addClass(cls);\n\n    KTUtil.animateClass(KTUtil.getById(form), 'animate__animated animate__backInUp');\n  };\n\n  var _handleSignInForm = function _handleSignInForm() {\n    var validation; // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n    /* validation = FormValidation.formValidation(\r\n    KTUtil.getById('kt_login_signin_form'),\r\n    {\r\n    fields: {\r\n    username: {\r\n    validators: {\r\n    notEmpty: {\r\n    message: 'Username is required'\r\n    }\r\n    }\r\n    },\r\n    password: {\r\n    validators: {\r\n    notEmpty: {\r\n    message: 'Password is required'\r\n    }\r\n    }\r\n    }\r\n    },\r\n    plugins: {\r\n                trigger: new FormValidation.plugins.Trigger(),\r\n                submitButton: new FormValidation.plugins.SubmitButton(),\r\n                //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\r\n    bootstrap: new FormValidation.plugins.Bootstrap()\r\n    }\r\n    }\r\n    ); */\n\n    /* $('#kt_login_signin_submit').on('click', function (e) {\r\n        e.preventDefault();\r\n          validation.validate().then(function(status) {\r\n      if (status == 'Valid') {\r\n                swal.fire({\r\n              text: \"All is cool! Now you submit this form\",\r\n              icon: \"success\",\r\n              buttonsStyling: false,\r\n              confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n    \t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t}\r\n          }).then(function() {\r\n    KTUtil.scrollTop();\r\n    });\r\n    } else {\r\n    swal.fire({\r\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n              icon: \"error\",\r\n              buttonsStyling: false,\r\n              confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n    \t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t}\r\n          }).then(function() {\r\n    KTUtil.scrollTop();\r\n    });\r\n    }\r\n    });\r\n    }); */\n    // Handle forgot button\n\n    $('#kt_login_forgot').on('click', function (e) {\n      e.preventDefault();\n\n      _showForm('forgot');\n    }); // Handle signup\n\n    $('#kt_login_signup').on('click', function (e) {\n      e.preventDefault();\n\n      _showForm('signup');\n    });\n  };\n\n  var _handleSignUpForm = function _handleSignUpForm(e) {\n    var validation;\n    var form = KTUtil.getById('kt_login_signup_form'); // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n    /* validation = FormValidation.formValidation(\r\n    form,\r\n    {\r\n    fields: {\r\n    fullname: {\r\n    validators: {\r\n    notEmpty: {\r\n    message: 'Username is required'\r\n    }\r\n    }\r\n    },\r\n    email: {\r\n                    validators: {\r\n    notEmpty: {\r\n    message: 'Email address is required'\r\n    },\r\n                        emailAddress: {\r\n    message: 'The value is not a valid email address'\r\n    }\r\n    }\r\n    },\r\n                password: {\r\n                    validators: {\r\n                        notEmpty: {\r\n                            message: 'The password is required'\r\n                        }\r\n                    }\r\n                },\r\n                cpassword: {\r\n                    validators: {\r\n                        notEmpty: {\r\n                            message: 'The password confirmation is required'\r\n                        },\r\n                        identical: {\r\n                            compare: function() {\r\n                                return form.querySelector('[name=\"password\"]').value;\r\n                            },\r\n                            message: 'The password and its confirm are not the same'\r\n                        }\r\n                    }\r\n                },\r\n                agree: {\r\n                    validators: {\r\n                        notEmpty: {\r\n                            message: 'You must accept the terms and conditions'\r\n                        }\r\n                    }\r\n                },\r\n    },\r\n    plugins: {\r\n    trigger: new FormValidation.plugins.Trigger(),\r\n    bootstrap: new FormValidation.plugins.Bootstrap()\r\n    }\r\n    }\r\n    );\r\n      $('#kt_login_signup_submit').on('click', function (e) {\r\n        e.preventDefault();\r\n          validation.validate().then(function(status) {\r\n      if (status == 'Valid') {\r\n                swal.fire({\r\n              text: \"All is cool! Now you submit this form\",\r\n              icon: \"success\",\r\n              buttonsStyling: false,\r\n              confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n    \t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t}\r\n          }).then(function() {\r\n    KTUtil.scrollTop();\r\n    });\r\n    } else {\r\n    swal.fire({\r\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n              icon: \"error\",\r\n              buttonsStyling: false,\r\n              confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n    \t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t}\r\n          }).then(function() {\r\n    KTUtil.scrollTop();\r\n    });\r\n    }\r\n    });\r\n    }); */\n    // Handle cancel button\n\n    $('#kt_login_signup_cancel').on('click', function (e) {\n      e.preventDefault();\n\n      _showForm('signin');\n    });\n  };\n\n  var _handleForgotForm = function _handleForgotForm(e) {\n    var validation; // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n    /* validation = FormValidation.formValidation(\r\n    KTUtil.getById('kt_login_forgot_form'),\r\n    {\r\n    fields: {\r\n    email: {\r\n    validators: {\r\n    notEmpty: {\r\n    message: 'Email address is required'\r\n    },\r\n                        emailAddress: {\r\n    message: 'The value is not a valid email address'\r\n    }\r\n    }\r\n    }\r\n    },\r\n    plugins: {\r\n    trigger: new FormValidation.plugins.Trigger(),\r\n    bootstrap: new FormValidation.plugins.Bootstrap()\r\n    }\r\n    }\r\n    );\r\n      // Handle submit button\r\n    $('#kt_login_forgot_submit').on('click', function (e) {\r\n        e.preventDefault();\r\n          validation.validate().then(function(status) {\r\n      if (status == 'Valid') {\r\n                // Submit form\r\n                KTUtil.scrollTop();\r\n    } else {\r\n    swal.fire({\r\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n              icon: \"error\",\r\n              buttonsStyling: false,\r\n              confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n    \t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t}\r\n          }).then(function() {\r\n    KTUtil.scrollTop();\r\n    });\r\n    }\r\n    });\r\n    }); */\n    // Handle cancel button\n\n    $('#kt_login_forgot_cancel').on('click', function (e) {\n      e.preventDefault();\n\n      _showForm('signin');\n    });\n  }; // Public Functions\n\n\n  return {\n    // public functions\n    init: function init() {\n      _login = $('#kt_login');\n\n      _handleSignInForm();\n\n      _handleSignUpForm();\n\n      _handleForgotForm();\n    }\n  };\n}(); // Class Initialization\n\n\njQuery(document).ready(function () {\n  KTLogin.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/custom/login/login-general.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/custom/login/login-general.js"]();
/******/ 	
/******/ })()
;