/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/features/charts/apexcharts.js":
/*!*******************************************************************!*\
  !*** ./resources/metronic/js/pages/features/charts/apexcharts.js ***!
  \*******************************************************************/
/***/ (() => {

eval(" // Shared Colors Definition\n\nvar primary = '#6993FF';\nvar success = '#1BC5BD';\nvar info = '#8950FC';\nvar warning = '#FFA800';\nvar danger = '#F64E60'; // Class definition\n\nfunction generateBubbleData(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\n    ;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n    series.push([x, y, z]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n}\n\nfunction generateData(count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = 'w' + (i + 1).toString();\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push({\n      x: x,\n      y: y\n    });\n    i++;\n  }\n\n  return series;\n}\n\nvar KTApexChartsDemo = function () {\n  // Private functions\n  var _demo1 = function _demo1() {\n    var apexChart = \"#chart_1\";\n    var options = {\n      series: [{\n        name: \"Desktops\",\n        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n      }],\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'],\n          // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n      },\n      colors: [primary]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo2 = function _demo2() {\n    var apexChart = \"#chart_2\";\n    var options = {\n      series: [{\n        name: 'series1',\n        data: [31, 40, 28, 51, 42, 109, 100]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }],\n      chart: {\n        height: 350,\n        type: 'area'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      xaxis: {\n        type: 'datetime',\n        categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\n      },\n      tooltip: {\n        x: {\n          format: 'dd/MM/yy HH:mm'\n        }\n      },\n      colors: [primary, success]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo3 = function _demo3() {\n    var apexChart = \"#chart_3\";\n    var options = {\n      series: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }, {\n        name: 'Free Cash Flow',\n        data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n      }],\n      chart: {\n        type: 'bar',\n        height: 350\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '55%',\n          endingShape: 'rounded'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n      },\n      yaxis: {\n        title: {\n          text: '$ (thousands)'\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      tooltip: {\n        y: {\n          formatter: function formatter(val) {\n            return \"$ \" + val + \" thousands\";\n          }\n        }\n      },\n      colors: [primary, success, warning]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo4 = function _demo4() {\n    var apexChart = \"#chart_4\";\n    var options = {\n      series: [{\n        name: 'Marine Sprite',\n        data: [44, 55, 41, 37, 22, 43, 21]\n      }, {\n        name: 'Striking Calf',\n        data: [53, 32, 33, 52, 13, 43, 32]\n      }, {\n        name: 'Tank Picture',\n        data: [12, 17, 11, 9, 15, 11, 20]\n      }, {\n        name: 'Bucket Slope',\n        data: [9, 7, 5, 8, 6, 9, 4]\n      }, {\n        name: 'Reborn Kid',\n        data: [25, 12, 19, 32, 25, 24, 10]\n      }],\n      chart: {\n        type: 'bar',\n        height: 350,\n        stacked: true\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true\n        }\n      },\n      stroke: {\n        width: 1,\n        colors: ['#fff']\n      },\n      title: {\n        text: 'Fiction Books Sales'\n      },\n      xaxis: {\n        categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n        labels: {\n          formatter: function formatter(val) {\n            return val + \"K\";\n          }\n        }\n      },\n      yaxis: {\n        title: {\n          text: undefined\n        }\n      },\n      tooltip: {\n        y: {\n          formatter: function formatter(val) {\n            return val + \"K\";\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'left',\n        offsetX: 40\n      },\n      colors: [primary, success, warning, danger, info]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo5 = function _demo5() {\n    var apexChart = \"#chart_5\";\n    var options = {\n      series: [{\n        name: 'Income',\n        type: 'column',\n        data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n      }, {\n        name: 'Cashflow',\n        type: 'column',\n        data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n      }, {\n        name: 'Revenue',\n        type: 'line',\n        data: [20, 29, 37, 36, 44, 45, 50, 58]\n      }],\n      chart: {\n        height: 350,\n        type: 'line',\n        stacked: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [1, 1, 4]\n      },\n      title: {\n        text: 'XYZ - Stock Analysis (2009 - 2016)',\n        align: 'left',\n        offsetX: 110\n      },\n      xaxis: {\n        categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\n      },\n      yaxis: [{\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: primary\n        },\n        labels: {\n          style: {\n            colors: primary\n          }\n        },\n        title: {\n          text: \"Income (thousand crores)\",\n          style: {\n            color: primary\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      }, {\n        seriesName: 'Income',\n        opposite: true,\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: success\n        },\n        labels: {\n          style: {\n            colors: success\n          }\n        },\n        title: {\n          text: \"Operating Cashflow (thousand crores)\",\n          style: {\n            color: success\n          }\n        }\n      }, {\n        seriesName: 'Revenue',\n        opposite: true,\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: warning\n        },\n        labels: {\n          style: {\n            colors: warning\n          }\n        },\n        title: {\n          text: \"Revenue (thousand crores)\",\n          style: {\n            color: warning\n          }\n        }\n      }],\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft',\n          // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 60\n        }\n      },\n      legend: {\n        horizontalAlign: 'left',\n        offsetX: 40\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo6 = function _demo6() {\n    var apexChart = \"#chart_6\";\n    var options = {\n      series: [{\n        data: [{\n          x: 'Analysis',\n          y: [new Date('2019-02-27').getTime(), new Date('2019-03-04').getTime()],\n          fillColor: primary\n        }, {\n          x: 'Design',\n          y: [new Date('2019-03-04').getTime(), new Date('2019-03-08').getTime()],\n          fillColor: success\n        }, {\n          x: 'Coding',\n          y: [new Date('2019-03-07').getTime(), new Date('2019-03-10').getTime()],\n          fillColor: info\n        }, {\n          x: 'Testing',\n          y: [new Date('2019-03-08').getTime(), new Date('2019-03-12').getTime()],\n          fillColor: warning\n        }, {\n          x: 'Deployment',\n          y: [new Date('2019-03-12').getTime(), new Date('2019-03-17').getTime()],\n          fillColor: danger\n        }]\n      }],\n      chart: {\n        height: 350,\n        type: 'rangeBar'\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          distributed: true,\n          dataLabels: {\n            hideOverflowingLabels: false\n          }\n        }\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function formatter(val, opts) {\n          var label = opts.w.globals.labels[opts.dataPointIndex];\n          var a = moment(val[0]);\n          var b = moment(val[1]);\n          var diff = b.diff(a, 'days');\n          return label + ': ' + diff + (diff > 1 ? ' days' : ' day');\n        },\n        style: {\n          colors: ['#f3f4f5', '#fff']\n        }\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      yaxis: {\n        show: false\n      },\n      grid: {\n        row: {\n          colors: ['#f3f4f5', '#fff'],\n          opacity: 1\n        }\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo7 = function _demo7() {\n    var apexChart = \"#chart_7\";\n    var options = {\n      series: [{\n        data: [{\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        }, {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        }, {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        }, {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        }, {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        }, {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        }, {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        }, {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        }, {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        }, {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        }, {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        }, {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        }, {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        }, {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        }, {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        }, {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        }, {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        }, {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        }, {\n          x: new Date(1538811000000),\n          y: [6623.48, 6627, 6618.38, 6620.35]\n        }, {\n          x: new Date(1538812800000),\n          y: [6619.43, 6620.35, 6610.05, 6615.53]\n        }, {\n          x: new Date(1538814600000),\n          y: [6615.53, 6617.93, 6610, 6615.19]\n        }, {\n          x: new Date(1538816400000),\n          y: [6615.19, 6621.6, 6608.2, 6620]\n        }, {\n          x: new Date(1538818200000),\n          y: [6619.54, 6625.17, 6614.15, 6620]\n        }, {\n          x: new Date(1538820000000),\n          y: [6620.33, 6634.15, 6617.24, 6624.61]\n        }, {\n          x: new Date(1538821800000),\n          y: [6625.95, 6626, 6611.66, 6617.58]\n        }, {\n          x: new Date(1538823600000),\n          y: [6619, 6625.97, 6595.27, 6598.86]\n        }, {\n          x: new Date(1538825400000),\n          y: [6598.86, 6598.88, 6570, 6587.16]\n        }, {\n          x: new Date(1538827200000),\n          y: [6588.86, 6600, 6580, 6593.4]\n        }, {\n          x: new Date(1538829000000),\n          y: [6593.99, 6598.89, 6585, 6587.81]\n        }, {\n          x: new Date(1538830800000),\n          y: [6587.81, 6592.73, 6567.14, 6578]\n        }, {\n          x: new Date(1538832600000),\n          y: [6578.35, 6581.72, 6567.39, 6579]\n        }, {\n          x: new Date(1538834400000),\n          y: [6579.38, 6580.92, 6566.77, 6575.96]\n        }, {\n          x: new Date(1538836200000),\n          y: [6575.96, 6589, 6571.77, 6588.92]\n        }, {\n          x: new Date(1538838000000),\n          y: [6588.92, 6594, 6577.55, 6589.22]\n        }, {\n          x: new Date(1538839800000),\n          y: [6589.3, 6598.89, 6589.1, 6596.08]\n        }, {\n          x: new Date(1538841600000),\n          y: [6597.5, 6600, 6588.39, 6596.25]\n        }, {\n          x: new Date(1538843400000),\n          y: [6598.03, 6600, 6588.73, 6595.97]\n        }, {\n          x: new Date(1538845200000),\n          y: [6595.97, 6602.01, 6588.17, 6602]\n        }, {\n          x: new Date(1538847000000),\n          y: [6602, 6607, 6596.51, 6599.95]\n        }, {\n          x: new Date(1538848800000),\n          y: [6600.63, 6601.21, 6590.39, 6591.02]\n        }, {\n          x: new Date(1538850600000),\n          y: [6591.02, 6603.08, 6591, 6591]\n        }, {\n          x: new Date(1538852400000),\n          y: [6591, 6601.32, 6585, 6592]\n        }, {\n          x: new Date(1538854200000),\n          y: [6593.13, 6596.01, 6590, 6593.34]\n        }, {\n          x: new Date(1538856000000),\n          y: [6593.34, 6604.76, 6582.63, 6593.86]\n        }, {\n          x: new Date(1538857800000),\n          y: [6593.86, 6604.28, 6586.57, 6600.01]\n        }, {\n          x: new Date(1538859600000),\n          y: [6601.81, 6603.21, 6592.78, 6596.25]\n        }, {\n          x: new Date(1538861400000),\n          y: [6596.25, 6604.2, 6590, 6602.99]\n        }, {\n          x: new Date(1538863200000),\n          y: [6602.99, 6606, 6584.99, 6587.81]\n        }, {\n          x: new Date(1538865000000),\n          y: [6587.81, 6595, 6583.27, 6591.96]\n        }, {\n          x: new Date(1538866800000),\n          y: [6591.97, 6596.07, 6585, 6588.39]\n        }, {\n          x: new Date(1538868600000),\n          y: [6587.6, 6598.21, 6587.6, 6594.27]\n        }, {\n          x: new Date(1538870400000),\n          y: [6596.44, 6601, 6590, 6596.55]\n        }, {\n          x: new Date(1538872200000),\n          y: [6598.91, 6605, 6596.61, 6600.02]\n        }, {\n          x: new Date(1538874000000),\n          y: [6600.55, 6605, 6589.14, 6593.01]\n        }, {\n          x: new Date(1538875800000),\n          y: [6593.15, 6605, 6592, 6603.06]\n        }, {\n          x: new Date(1538877600000),\n          y: [6603.07, 6604.5, 6599.09, 6603.89]\n        }, {\n          x: new Date(1538879400000),\n          y: [6604.44, 6604.44, 6600, 6603.5]\n        }, {\n          x: new Date(1538881200000),\n          y: [6603.5, 6603.99, 6597.5, 6603.86]\n        }, {\n          x: new Date(1538883000000),\n          y: [6603.85, 6605, 6600, 6604.07]\n        }, {\n          x: new Date(1538884800000),\n          y: [6604.98, 6606, 6604.07, 6606]\n        }]\n      }],\n      chart: {\n        type: 'candlestick',\n        height: 350\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true\n        }\n      },\n      colors: [success, danger]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo8 = function _demo8() {\n    var apexChart = \"#chart_8\";\n    var options = {\n      series: [{\n        name: 'Bubble1',\n        data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n          min: 10,\n          max: 60\n        })\n      }, {\n        name: 'Bubble2',\n        data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n          min: 10,\n          max: 60\n        })\n      }, {\n        name: 'Bubble3',\n        data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n          min: 10,\n          max: 60\n        })\n      }, {\n        name: 'Bubble4',\n        data: generateBubbleData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n          min: 10,\n          max: 60\n        })\n      }],\n      chart: {\n        height: 350,\n        type: 'bubble'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        opacity: 0.8\n      },\n      xaxis: {\n        tickAmount: 12,\n        type: 'category'\n      },\n      yaxis: {\n        max: 70\n      },\n      colors: [primary, success, warning, danger]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo9 = function _demo9() {\n    var apexChart = \"#chart_9\";\n    var options = {\n      series: [{\n        name: \"SAMPLE A\",\n        data: [[16.4, 5.4], [21.7, 2], [25.4, 3], [19, 2], [10.9, 1], [13.6, 3.2], [10.9, 7.4], [10.9, 0], [10.9, 8.2], [16.4, 0], [16.4, 1.8], [13.6, 0.3], [13.6, 0], [29.9, 0], [27.1, 2.3], [16.4, 0], [13.6, 3.7], [10.9, 5.2], [16.4, 6.5], [10.9, 0], [24.5, 7.1], [10.9, 0], [8.1, 4.7], [19, 0], [21.7, 1.8], [27.1, 0], [24.5, 0], [27.1, 0], [29.9, 1.5], [27.1, 0.8], [22.1, 2]]\n      }, {\n        name: \"SAMPLE B\",\n        data: [[36.4, 13.4], [1.7, 11], [5.4, 8], [9, 17], [1.9, 4], [3.6, 12.2], [1.9, 14.4], [1.9, 9], [1.9, 13.2], [1.4, 7], [6.4, 8.8], [3.6, 4.3], [1.6, 10], [9.9, 2], [7.1, 15], [1.4, 0], [3.6, 13.7], [1.9, 15.2], [6.4, 16.5], [0.9, 10], [4.5, 17.1], [10.9, 10], [0.1, 14.7], [9, 10], [12.7, 11.8], [2.1, 10], [2.5, 10], [27.1, 10], [2.9, 11.5], [7.1, 10.8], [2.1, 12]]\n      }, {\n        name: \"SAMPLE C\",\n        data: [[21.7, 3], [23.6, 3.5], [24.6, 3], [29.9, 3], [21.7, 20], [23, 2], [10.9, 3], [28, 4], [27.1, 0.3], [16.4, 4], [13.6, 0], [19, 5], [22.4, 3], [24.5, 3], [32.6, 3], [27.1, 4], [29.6, 6], [31.6, 8], [21.6, 5], [20.9, 4], [22.4, 0], [32.6, 10.3], [29.7, 20.8], [24.5, 0.8], [21.4, 0], [21.7, 6.9], [28.6, 7.7], [15.4, 0], [18.1, 0], [33.4, 0], [16.4, 0]]\n      }],\n      chart: {\n        height: 350,\n        type: 'scatter',\n        zoom: {\n          enabled: true,\n          type: 'xy'\n        }\n      },\n      xaxis: {\n        tickAmount: 10,\n        labels: {\n          formatter: function formatter(val) {\n            return parseFloat(val).toFixed(1);\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 7\n      },\n      colors: [primary, success, warning]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo10 = function _demo10() {\n    var apexChart = \"#chart_10\";\n    var options = {\n      series: [{\n        name: 'Jan',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Feb',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Mar',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Apr',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'May',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Jun',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Jul',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Aug',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }, {\n        name: 'Sep',\n        data: generateData(20, {\n          min: -30,\n          max: 55\n        })\n      }],\n      chart: {\n        height: 350,\n        type: 'heatmap'\n      },\n      plotOptions: {\n        heatmap: {\n          shadeIntensity: 0.5,\n          colorScale: {\n            ranges: [{\n              from: -30,\n              to: 5,\n              name: 'low',\n              color: success\n            }, {\n              from: 6,\n              to: 20,\n              name: 'medium',\n              color: primary\n            }, {\n              from: 21,\n              to: 45,\n              name: 'high',\n              color: warning\n            }, {\n              from: 46,\n              to: 55,\n              name: 'extreme',\n              color: danger\n            }]\n          }\n        }\n      },\n      dataLabels: {\n        enabled: false\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo11 = function _demo11() {\n    var apexChart = \"#chart_11\";\n    var options = {\n      series: [44, 55, 41, 17, 15],\n      chart: {\n        width: 380,\n        type: 'donut'\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }],\n      colors: [primary, success, warning, danger, info]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo12 = function _demo12() {\n    var apexChart = \"#chart_12\";\n    var options = {\n      series: [44, 55, 13, 43, 22],\n      chart: {\n        width: 380,\n        type: 'pie'\n      },\n      labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }],\n      colors: [primary, success, warning, danger, info]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo13 = function _demo13() {\n    var apexChart = \"#chart_13\";\n    var options = {\n      series: [44, 55, 67, 83],\n      chart: {\n        height: 350,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              fontSize: '22px'\n            },\n            value: {\n              fontSize: '16px'\n            },\n            total: {\n              show: true,\n              label: 'Total',\n              formatter: function formatter(w) {\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                return 249;\n              }\n            }\n          }\n        }\n      },\n      labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\n      colors: [primary, success, warning, danger]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  var _demo14 = function _demo14() {\n    var apexChart = \"#chart_14\";\n    var options = {\n      series: [{\n        name: 'Series 1',\n        data: [80, 50, 30, 40, 100, 20]\n      }, {\n        name: 'Series 2',\n        data: [20, 30, 40, 80, 20, 80]\n      }, {\n        name: 'Series 3',\n        data: [44, 76, 78, 13, 43, 10]\n      }],\n      chart: {\n        height: 350,\n        type: 'radar',\n        dropShadow: {\n          enabled: true,\n          blur: 1,\n          left: 1,\n          top: 1\n        }\n      },\n      stroke: {\n        width: 0\n      },\n      fill: {\n        opacity: 0.4\n      },\n      markers: {\n        size: 0\n      },\n      xaxis: {\n        categories: ['2011', '2012', '2013', '2014', '2015', '2016']\n      },\n      colors: [primary, success, warning]\n    };\n    var chart = new ApexCharts(document.querySelector(apexChart), options);\n    chart.render();\n  };\n\n  return {\n    // public functions\n    init: function init() {\n      _demo1();\n\n      _demo2();\n\n      _demo3();\n\n      _demo4();\n\n      _demo5();\n\n      _demo6();\n\n      _demo7();\n\n      _demo8();\n\n      _demo9();\n\n      _demo10();\n\n      _demo11();\n\n      _demo12();\n\n      _demo13();\n\n      _demo14();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTApexChartsDemo.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/features/charts/apexcharts.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/features/charts/apexcharts.js"]();
/******/ 	
/******/ })()
;